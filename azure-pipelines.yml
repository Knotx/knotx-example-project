trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    ./distribution/getting-started/gradlew -p ./distribution/getting-started build --info
  displayName: 'Build: Distribution -> Getting Started with Stack'
- script: |
    ./distribution/getting-started/gradlew -p ./distribution/getting-started build-docker --info
  displayName: 'Build: Distribution -> Getting Started with Docker'
- script: |
    ./api-gateway/api-console/gradlew -p ./api-gateway/api-console build --info
  displayName: 'Build: API gateway -> OpenAPI & API Console'
- script: |
    ./api-gateway/api-composition/gradlew -p ./api-gateway/api-composition build --info
  displayName: 'Build: API gateway -> API Composition'
- script: |
    ./api-gateway/caching/gradlew -p ./api-gateway/caching build --info
  displayName: 'Build: API gateway -> Caching'
- script: |
    ./api-gateway/graphql-api/gradlew -p ./api-gateway/graphql-api build --info
  displayName: 'Build: API gateway -> GraphQL API'
- script: |
    ./template-processing/handlebars/gradlew -p ./template-processing/handlebars build --info
  displayName: 'Build: Template processing -> Handlebars'
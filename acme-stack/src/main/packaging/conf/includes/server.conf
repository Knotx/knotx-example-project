# Knot.x server HTTP port
serverOptions.port = ${global.server.port}

# Open API specification url, see https://vertx.io/docs/kdoc/vertx/io.vertx.rxjava.ext.web.api.contract.openapi3/-open-a-p-i3-router-factory/rx-create.html
routingSpecificationLocation = ${routing.specification}
routingOperations = ${routing.operations}

# Vert.x event bus delivery options used when communicating with other verticles
# see http://vertx.io/docs/vertx-core/dataobjects.html#DeliveryOptions for the details what can be configured
#
# deliveryOptions {}

# Configuraiton of the HTTP Server access log (templating and gatway modes shares the same access log)
accessLog {
  enabled = true # Enable/Disable access log

  # Whether to log after request arrives (true), or after sending response (false). Default is false
  # immediate =

  # Access log format. Default is DEFAULT
  # Available formats: DEFAULT, SHORT, TINY
  # format =
}

# Enable/Disable stack traces on the error pages. Disable it on production
displayExceptionDetails = true

# Limit of uploaded file size in bytes. Default is -1 (unlimited).
# fileUploadLimit =

# Folder where uploaded files will be stored. Default is file-uploads folder in current working directory.
# fileUploadDirectory =

####### Server backpressure section ########

# Enable/Disable request dropping feature (backpressure). Default is disabled
dropRequests = false

# If dropRequest is enabled, a dropped requests will got HTTP response with a status code defined here. Default is 429 (Too many requests)
# dropRequestResponseCode =

# Defines a backpressure capacity buffer used when dropRequests is enabled. Default is 1000 slots
# backpressureBufferCapacity =

# A strategy how the requests are dropped (if the backpressure buffer is full). Default is DROP_LATEST.
# Available values: ERROR (terminate a sequence), DROP_LATEST, DROP_OLDEST
# backpressureStrategy =

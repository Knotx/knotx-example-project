# Event bus settings
address = ${global.bridge.address}

# List of mappings between service aliases and datasources.
# You can define here as many service definitions as required for your project.
dataDefinitions = [
  # Definition of the single datasource to be used in the HTML snippets.
  # You can define an array of such services here.
  {
    # Name of the service that will be used in HTML snippets
    #
    name = first-service

    # Event bus address of the datasource that is responsible for handling physicall communication
    # with a data source
    # Remember that this addres should be exacly the same as one defined in datasource config
    #
    adapter = ${global.bridge.dataSource.http.address}

    # Arbitrary parameters to be send to datasource.
    # Keep in mind, the actuall parameters to be send are the params object from HTML snippet
    # merged with values defined here.
    #
    params.path = /service/first.json
    cacheKey = first
  },
  {
    name = second-service
    adapter = ${global.bridge.dataSource.http.address}
    params.path = /service/second.json
  },
  {
    name = third-service
    adapter = ${global.bridge.dataSource.http.address}
    params.path = /service/third.json
  },
  {
    name = labelsRepository
    adapter = ${global.bridge.dataSource.http.address}
  }
]

# Vert.x event bus delivery options used when communicating with other verticles
# see http://vertx.io/docs/vertx-core/dataobjects.html#DeliveryOptions for the details what can be configured
#
# deliveryOptions {}

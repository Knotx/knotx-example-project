########### Modules to start ###########
modules = [
  ########### Core ###########
  "server=io.knotx.server.KnotxServerVerticle"
  "fsRepo=io.knotx.repository.fs.FilesystemRepositoryConnectorVerticle"
  "splitter=io.knotx.splitter.FragmentSplitterVerticle"
  "assembler=io.knotx.assembler.FragmentAssemblerVerticle"
  "hbsKnot=io.knotx.knot.templating.HandlebarsKnotVerticle"
  "gatewayKnot=io.knotx.gateway.GatewayKnotVerticle"
  "respProviderKnot=io.knotx.gateway.ResponseProviderKnotVerticle"
  ########### Data Bridge ###########
  "dataBridge=io.knotx.databridge.core.DataBridgeKnot"
  "dataSourceHttp=io.knotx.databridge.http.HttpDataSourceAdapter"
  ########### Forms ###########
  "forms=io.knotx.forms.core.FormsKnot"
  ########### Custom ###########
  "formsAdapter=com.acme.adapter.action.http.FormsAdapterVerticle"
  "reqProcessorKnot=com.acme.gateway.RequestProcessorKnotVerticle"
  "serviceMock=com.acme.content.MockServiceVerticle"
]

########### Globals ###########
global {
  serverPort = 8092

  snippetTagName = script

  address {
    httpRepo = knotx.core.repository.http
    fsRepo = knotx.core.repository.filesystem

    knot {
      hbs = knotx.knot.handlebars
      action = knotx.knot.action
      gateway = knotx.gateway.gatewayknot
      exampleReqProcessor = knotx.gateway.requestprocessor
    }

    adapter {
      action = knotx.adapter.action.http
    }
  }

  sample {
    httpService {
      domain = localhost
      port = 3000
    }
  }

  # Data Bridge globals
  bridge {
    address = knotx.knot.databridge
    dataSource {
      http.address = knotx.bridge.datasource.http
    }
  }
}

########### Core modules configurations ###########
config.server {
  options.config {
    include required("includes/server.conf")
  }
}

config.fsRepo {
  options.config {
    include required("includes/fsRepo.conf")
  }
}

config.splitter.options.config {
  snippetTagName = ${global.snippetTagName} # Do not change
}

config.assembler.options.config {
  snippetTagName = ${global.snippetTagName} # Do not change
}

config.hbsKnot {
  options.config.address = ${global.address.knot.hbs}
  options.config.cacheSize = 1000
}

config.forms {
  options.config {
    include required("includes/forms.conf")
  }
}

########### Data Bridge modules configurations ###########

config.dataBridge {
  options.config {
    include required("includes/dataBridge.conf")
  }
}

config.dataSourceHttp {
  options.config {
    include required("includes/dataSourceHttp.conf")
  }
}

########### Custom modules configurations ###########

config.formsAdapter {
  options.config {
    include required("includes/formsAdapter.conf")
  }
}

config.serviceMock.options.config {
  mockDataRoot = sample/service
  bouncing = true
  httpPort = ${global.sample.httpService.port}
}

config.reqProcessorKnot.options.config {
  address = ${global.address.knot.exampleReqProcessor}
}

# Vert.x event bus delivery options used when communicating with other verticles
# see http://vertx.io/docs/vertx-core/dataobjects.html#HttpClientOptions for the details what can be configured
#
clientOptions {
  maxPoolSize = 1000
  idleTimeout = 120 # seconds
  tryUseCompression = true

  # If you're going to use SSL (clientDestination.scheme='https') then here you'd need to configure
  # some aspects related to the SSL negotiation and validation.
  #
  # Whether all server certificated should be trusted or not (e.g. self-signed certificates)
  # trustAll = true
  #
  # Hostname verification
  # verifyHost = false
  #
  # It will force SSL SNI (Server Name Indication). The SNI will be set to the same value as 'hostHeader' (set in ClientDestination)
  # forceSni = true
}

# HTTP Repository connection details
clientDestination {
  # Connection scheme: http or https
  scheme = http

  # domain or the IP of the host: e.g. localhost, 10.0.11.2
  domain = repository

  ## Port on which the host listens, e.g. 8080, 3001, etc.
  port = 80

  # Host header override to be used with a communication to the repository. If it's set, it overrides any value in the 'Host' header, and sets the SNI SSL to the same value.
  # hostHeader =
}

# List of allowed request headers that will be send to HTTP repository.
# Each item is a string that defines regex, e.g. to match any char use `.*`
#
allowedRequestHeaders = [
  "Accept.*"
  Authorization
  Connection
  Cookie
  Date
  "Edge.*"
  "If.*"
  Origin
  Pragma
  Proxy-Authorization
  "Surrogate.*"
  User-Agent
  Via
  "X-.*"
]

# Statically defined HTTP request header sent in every request to the repository
customHttpHeader = {
  name = X-User-Agent
  value = Knot.x
}

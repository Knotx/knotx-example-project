# Event bus address on which the HTTP repository connector listens on. Default is 'knotx.core.repository.http'
#
address = ${global.httpRepo.address}

# Vert.x event bus delivery options used when communicating with other verticles
# see http://vertx.io/docs/vertx-core/dataobjects.html#HttpClientOptions for the details what can be configured
#
clientOptions {
  maxPoolSize = 1000
  idleTimeout = 120 # seconds
  tryUseCompression = true
}

# HTTP Repository connection details
clientDestination {
  # Connection scheme: http or https
  scheme = http

  # domain or the IP of the host: e.g. localhost, 10.0.11.2
  domain = ${global.httpRepo.domain}

  ## Port on which the host listens, e.g. 8080, 3001, etc.
  port = ${global.httpRepo.port}

  # Host header override to be used with a communication to the repository. If it's set, it overrides any value in the 'Host' header, and sets the SNI SSL to the same value.
  # hostHeader =
}

# List of allowed request headers that will be send to HTTP repository.
# Each item is a string that defines regex, e.g. to match any char use `.*`
#
allowedRequestHeaders = [
  "Accept.*"
  Authorization
  Connection
  Cookie
  Date
  "Edge.*"
  Host
  "If.*"
  Origin
  Pragma
  Proxy-Authorization
  "Surrogate.*"
  User-Agent
  Via
  "X-.*"
]

# Statically defined HTTP request header sent in every request to the repository
customHttpHeader = {
  name = X-User-Agent
  value = Knot.x
}

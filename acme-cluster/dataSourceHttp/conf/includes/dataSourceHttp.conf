# Event bus address of the Basic HTTP Datasource
address = ${global.bridge.dataSource.http.address}

clientOptions {
  maxPoolSize = 1000
  idleTimeout = 120 # seconds

  # If your datasources are using SSL you'd need to configure here low level details on how the
  # SSL connection is to be maintaned. Currently, if configured all defined in 'datasources' section
  # will use SSL
  #
  # Enable SSL
  # ssl = true
  #
  # Whether all server certificated should be trusted or not (e.g. self-signed certificates)
  # trustAll = true
  #
  # Hostname verification
  # verifyHost = false
  #
  # Enables network activity logger (Netty). Remember you also need to include additional logger
  # configuration in the logback config:
  # <include resource="io/knotx/logging/logback/netty.xml" />
  #
  # logActivity = true
}

# List of datasource services that are supported by this datasource adapter.
# You can define here as many service definitions as required for your project.
services = [
  {
    # A regexp.
    # Any request to the datasource made by the adapter, is being made to the service with a given
    # physical conenction details, only if the given path matching this path regexp
    #
    path = "/.*"

    # A domain or IP of actual HTTP service the adapter will talk to
    #
    domain = service-mock

    # HTTP port of the service
    #
    port = 3000

    # List of request headers that will be send to the given service endpoint.
    # Each header can be use wildcards '*' to generalize list
    # E.g.
    # allowedRequestHeaders = [
    #     "X-.*"
    # ]
    # By default all requests headers are denied. If you want to enable a desired headers you can
    # express it as an array of regexp expressions, e.g. "X-.*" to allow all headers starting
    # with "X-", or simply ".*" to allow all headers.
    # Be careful what headers you're trying to pass through as some of them might affect the
    # communication with the service.
    #
    allowedRequestHeaders = [ ]

    # Additional request query parameters to be send in each request.
    # E.g.
    # queryParams {
    #    type = books
    #    query = java
    # }
    #
    queryParams {}

    # Additional headers to be send in each request to the service
    # E.g:
    # additionalHeaders {
    #     someToken = abxcdsafsfdfes
    # }
    #
    additionalHeaders {}
  }
]

# Statically defined HTTP request header sent in every request to any datasource
customRequestHeader {
  name = X-User-Agent
  value = Knot.x
}

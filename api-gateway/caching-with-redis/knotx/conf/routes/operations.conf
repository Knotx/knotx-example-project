routingOperations = ${routingOperations} [
  {
    operationId = healthcheck-operation
    handlers = [
      {
        name = healthcheck
      }
    ]
  }
  {
    operationId = get-book-operation
    handlers = ${config.server.handlers.common.request} [
      {
        name = singleFragmentSupplier
        config = {
          type = json
          # the task that the fragment supplier will use to get data
          configuration.data-knotx-task = get-book-task
        }
      }
      {
        name = fragmentsHandler
        config = {
          taskFactories = [
            {
              factory = default
              config {
                tasks = {
                  include required(classpath("routes/handlers/tasks.conf"))
                }
                nodeFactories = [
                  {
                    factory = action
                    config.logLevel = info
                    config.actions = {
                      include required(classpath("routes/handlers/actions.conf"))
                    }
                  }
                  {
                    factory = subtasks
                  }
                ]
              }
            }
          ]
        }
      }
      {
        name = fragmentsAssembler
      }
    ] ${config.server.handlers.common.response}
  }
]

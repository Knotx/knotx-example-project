routingOperations = ${routingOperations} [
  {
    operationId = healthcheck-operation
    handlers = [
      {
        name = healthcheck
      }
    ]
  }

  {
    operationId = payment-rx-operation
    handlers = [
      {
        name = paymentRxHandler
        config = {include required(classpath("routes/handlers/paymentRxHandler.conf"))}
      }
    ]
  }
  {
    operationId = payment-rx-operation-with-cb
    handlers = [
      {
        name = paymentRxHandlerWithCircuitBreaker
        config = {include required(classpath("routes/handlers/paymentRxHandlerWithCB.conf"))}
      }
    ]
  }
  {
    operationId = payment-configurable-operation
    handlers = ${config.server.handlers.common.request} [
      {
        name = singleFragmentSupplier
        config = {
          type = "stub"
          configuration.data-knotx-task = "payment-check"
        }
      }
      {
        name = fragmentsHandler
        config = {include required(classpath("routes/handlers/fragmentsHandler.conf"))}
      }
      {
        name = fragmentsAssembler
      }
    ] ${config.server.handlers.common.response}
  }
]
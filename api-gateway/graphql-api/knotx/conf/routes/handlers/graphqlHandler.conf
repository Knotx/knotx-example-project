schema = "books.graphqls"

# Task is a graph of Actions, see more https://github.com/Knotx/knotx-fragments/tree/master/handler#task
tasks {
  # fetch a list of books from Google Books API and expose their data to GraphQL fetcher
  get-books {
    action = getBooks
    onTransitions {
      _success {
        action = exposeInPayload-getBooks
      }
    }
  }

  # fetch a single book from Google Books API and expose its data to GraphQL fetcher
  get-book {
    action = getBook
    onTransitions {
      _success {
        action = exposeInPayload-getBook
      }
    }
  }
}

# Actions transform Fragment, see more https://github.com/Knotx/knotx-fragments/blob/master/handler/README.md#actions
actions {
  getBooks {
    factory = http
    config {
      endpointOptions {
        # Google Books API with a list of books
        path = "/books/v1/volumes?q={config.gql.match}"
        domain = www.googleapis.com
        port = 443
        allowedRequestHeaders = ["Content-Type"]
      }
      webClientOptions {
        ssl = true
      }
    }
  }
  exposeInPayload-getBooks {
    factory = expose-payload-data
    config {
      key = getBooks
      exposeAs = fetchedData
    }
  }

  getBook {
    factory = http
    config {
      endpointOptions {
        # Google Books API with a single book
        path = "/books/v1/volumes/{config.gql.id}"
        domain = www.googleapis.com
        port = 443
        allowedRequestHeaders = ["Content-Type"]
      }
      webClientOptions {
        ssl = true
      }
    }
  }
  exposeInPayload-getBook {
    factory = expose-payload-data
    config {
      key = getBook
      exposeAs = fetchedData
    }
  }
}
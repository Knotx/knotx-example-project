tasks {
  get-product-task {
    action = fetch-product-with-cache
    onTransitions {
      _success {
        action = product-to-body
      }
    }
  }
}

actions {
  # Target API caching proxy
  fetch-product-with-cache {
    # https://github.com/Knotx/knotx-fragments/blob/2.0.0/handler/core/src/main/java/io/knotx/fragments/handler/action/InMemoryCacheActionFactory.java
    factory = in-memory-cache
    config {
      cache {
        maximumSize = 1000
        ttl = 5000
      }
      cacheKey = "product-{param.id}"
      payloadKey = fetch-product
    }
    doAction = fetch-product
  }

  # Target API
  fetch-product {
    # https://github.com/Knotx/knotx-data-bridge/blob/2.0.0/http/action/src/main/java/io/knotx/databridge/http/action/HttpActionFactory.java
    factory = http
    config {
      endpointOptions {
        path = /product/id
        domain = webapi
        port = 8080
        allowedRequestHeaders = ["Content-Type"]
      }
    }

  }

  product-to-body {
    # https://github.com/Knotx/knotx-fragments/blob/2.0.0/handler/core/src/main/java/io/knotx/fragments/handler/action/PayloadToBodyActionFactory.java
    factory = payload-to-body
    config {
      key = "fetch-product._result"
    }
  }
}